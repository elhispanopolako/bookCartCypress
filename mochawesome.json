{
  "stats": {
    "suites": 3,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-25T16:46:33.705Z",
    "end": "2023-02-25T16:47:31.433Z",
    "duration": 49061,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3ceaa532-4c43-4a97-8cea-a6fbe120c67c",
      "title": "",
      "fullFile": "cypress/integration/E2E/login.js",
      "file": "cypress/integration/E2E/login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f292d5ef-f1b9-4be1-85b5-3124f5db3e37",
          "title": "Login page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "LF1.Verify that a registered user can log in with valid credentials",
              "fullTitle": "Login page LF1.Verify that a registered user can log in with valid credentials",
              "timedOut": null,
              "duration": 3049,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('users').then(users => {\n  cy.login(users.username, users.password);\n  cy.get('mat-toolbar-row ').should('contain', users.username);\n  cy.get('app-book-card').eq(0).should('be.visible').and('exist');\n});",
              "err": {},
              "uuid": "10609970-b1b9-41f7-953b-752e22fe8635",
              "parentUUID": "f292d5ef-f1b9-4be1-85b5-3124f5db3e37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LF2.Verify requirements of username and password",
              "fullTitle": "Login page LF2.Verify requirements of username and password",
              "timedOut": null,
              "duration": 1741,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.mat-card-actions > .mat-focus-indicator').click();\ncy.get('.mat-card input').each(input => cy.get(input).click().blur());\ncy.contains('Username is required');\ncy.contains('Password is required');",
              "err": {},
              "uuid": "ba96b6e2-5ef9-466d-b3c2-06b651fe5a67",
              "parentUUID": "f292d5ef-f1b9-4be1-85b5-3124f5db3e37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LF3.Verify that the website displays an error message if the user enters an invalid username",
              "fullTitle": "Login page LF3.Verify that the website displays an error message if the user enters an invalid username",
              "timedOut": null,
              "duration": 1377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('users').then(users => {\n  cy.login('invalid', users.password);\n  cy.contains('Username or Password is incorrect.');\n});",
              "err": {},
              "uuid": "6b7d769e-039d-45a6-9fb0-fc418e734336",
              "parentUUID": "f292d5ef-f1b9-4be1-85b5-3124f5db3e37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "LF4.Verify that the website displays an error message if the user enters an invalid password",
              "fullTitle": "Login page LF4.Verify that the website displays an error message if the user enters an invalid password",
              "timedOut": null,
              "duration": 3087,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('users').then(users => {\n  cy.login(users.username, 'pass');\n  cy.contains('Username or Password is incorrect.');\n});",
              "err": {},
              "uuid": "a41bbfae-42de-4390-8c13-6467e94e94c6",
              "parentUUID": "f292d5ef-f1b9-4be1-85b5-3124f5db3e37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10609970-b1b9-41f7-953b-752e22fe8635",
            "ba96b6e2-5ef9-466d-b3c2-06b651fe5a67",
            "6b7d769e-039d-45a6-9fb0-fc418e734336",
            "a41bbfae-42de-4390-8c13-6467e94e94c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9254,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7241949c-af4e-4271-b451-08d347b09021",
      "title": "",
      "fullFile": "cypress/integration/E2E/register.js",
      "file": "cypress/integration/E2E/register.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a4a3763d-663e-4bf8-9c51-8ddec2db9be3",
          "title": "Register page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "RF1.User can register with valid credentials",
              "fullTitle": "Register page RF1.User can register with valid credentials",
              "timedOut": null,
              "duration": 6186,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mat-input-0').type(user.getName());\ncy.get('#mat-input-1').type(user.getLastname());\ncy.get('#mat-input-2').type(username);\ncy.get('#mat-input-3').type(password);\ncy.get('#mat-input-4').type(password);\ncy.contains(user.getGender()).click();\ncy.get('.mat-card-actions').contains('Register').click();\ncy.wait('@validateUser').its('response.statusCode').should('eq', 200);\ncy.get('.mat-card-actions').contains('Register').click({\n  force: true\n});\ncy.wait('@createUser').its('response.statusCode').should('eq', 200);\ncy.url().should('include', '/login');\ncy.writeFile('cypress/fixtures/users.json', {\n  username: `${username}`,\n  password: `${password}`\n});\ncy.fixture('users').then(users => {\n  cy.loginAfterRegister(users.username, users.password);\n  cy.get('mat-toolbar-row ').should('contain', username);\n});",
              "err": {},
              "uuid": "61cc89f7-7eb6-4ee1-932b-3106b601ae4a",
              "parentUUID": "a4a3763d-663e-4bf8-9c51-8ddec2db9be3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RF2.Website displays an error message if the user attempts to register with an email address or username that is already in use",
              "fullTitle": "Register page RF2.Website displays an error message if the user attempts to register with an email address or username that is already in use",
              "timedOut": null,
              "duration": 4857,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('users').then(users => {\n  cy.intercept({\n    method: 'GET',\n    url: `/api/user/validateUserName/${users.username}`\n  }).as('validateUser');\n  cy.get('#mat-input-0').type(user.getName());\n  cy.get('#mat-input-1').type(user.getLastname());\n  cy.get('#mat-input-2').type(users.username);\n  cy.get('#mat-input-3').type(users.password);\n  cy.get('#mat-input-4').type(users.password);\n  cy.contains(user.getGender()).click();\n  cy.get('.mat-card-actions').contains('Register').click();\n  cy.wait('@validateUser').should(res => {\n    expect(res.response.statusCode).to.be.equal(200);\n    expect(res.response.body).to.be.equal(true);\n  });\n  cy.contains('User Name is not available');\n});",
              "err": {},
              "uuid": "d94ee47b-1907-43e4-b71b-484b2ba4d904",
              "parentUUID": "a4a3763d-663e-4bf8-9c51-8ddec2db9be3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RF3.Website requires the user to confirm their password and displays an error message if the passwords do not match",
              "fullTitle": "Register page RF3.Website requires the user to confirm their password and displays an error message if the passwords do not match",
              "timedOut": null,
              "duration": 2188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mat-input-0').type(user.getName());\ncy.get('#mat-input-1').type(user.getLastname());\ncy.get('#mat-input-2').type(user.getUsername());\ncy.get('#mat-input-3').type(user.getPassword());\ncy.get('#mat-input-4').type(user.getPassword());\ncy.contains(user.getGender()).click();\ncy.get('.mat-card-actions > .mat-focus-indicator').click();\ncy.contains('Password do not match');",
              "err": {},
              "uuid": "a5203258-387d-495e-9a5e-425d0e55461a",
              "parentUUID": "a4a3763d-663e-4bf8-9c51-8ddec2db9be3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RF4.Website enforces password complexity requirements",
              "fullTitle": "Register page RF4.Website enforces password complexity requirements",
              "timedOut": null,
              "duration": 1023,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mat-input-3').type('easyPass');\ncy.contains(user.getGender()).click();\ncy.contains('Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase letter and 1 number');",
              "err": {},
              "uuid": "8250d473-e3a2-465d-809c-5a0c9e3dde43",
              "parentUUID": "a4a3763d-663e-4bf8-9c51-8ddec2db9be3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RF5.Register using API",
              "fullTitle": "Register page RF5.Register using API",
              "timedOut": null,
              "duration": 1350,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: `/api/User/validateUserName/${usernameAPI}`\n}).then(res => {\n  expect(res.status).to.be.equal(200);\n  expect(res.body).to.be.equal(false);\n});\ncy.request({\n  method: 'POST',\n  url: '/api/User',\n  body: {\n    \"userId\": 0,\n    \"firstName\": user.getName(),\n    \"lastName\": user.getLastname(),\n    \"username\": usernameAPI,\n    \"password\": user.getPassword(),\n    \"gender\": user.getGender(),\n    \"userTypeId\": 0\n  }\n}).then(res => {\n  expect(res.status).to.be.equal(200);\n  cy.request({\n    method: 'GET',\n    url: `/api/User/validateUserName/${usernameAPI}`\n  }).then(res => {\n    expect(res.status).to.be.equal(200);\n    expect(res.body).to.be.equal(true);\n  });\n});",
              "err": {},
              "uuid": "7ac1f272-d3a8-4959-9571-3a99596b75d4",
              "parentUUID": "a4a3763d-663e-4bf8-9c51-8ddec2db9be3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61cc89f7-7eb6-4ee1-932b-3106b601ae4a",
            "d94ee47b-1907-43e4-b71b-484b2ba4d904",
            "a5203258-387d-495e-9a5e-425d0e55461a",
            "8250d473-e3a2-465d-809c-5a0c9e3dde43",
            "7ac1f272-d3a8-4959-9571-3a99596b75d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15604,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c991c8ff-7826-4dd5-83a7-80fcf2ccf651",
      "title": "",
      "fullFile": "cypress/integration/E2E/categories.js",
      "file": "cypress/integration/E2E/categories.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8f188257-79ac-4855-93b9-9f3212740c4e",
          "title": "Categories page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CF1.Verify Biography category contain a Biography books",
              "fullTitle": "Categories page CF1.Verify Biography category contain a Biography books",
              "timedOut": null,
              "duration": 14531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('app-book-card').then(book => {\n  let allBooks = book.length;\n  cy.get('mat-nav-list').contains(`${m.category}`).click();\n  cy.request({\n    method: 'GET',\n    url: '/api/Book'\n  }).then(res => {\n    let length = res.body.length;\n    let category = res.body.filter(x => x.category == `${m.category}`);\n    let bookTitle = category[0].title;\n    expect(allBooks).to.be.equal(length);\n    cy.get('app-book-card').then(book => {\n      expect(book[0]).to.contain(bookTitle);\n      expect(book.length).to.be.equal(category.length);\n    });\n  });\n});",
              "err": {},
              "uuid": "8ab70f25-35fe-437f-b048-0b4e78a1c550",
              "parentUUID": "8f188257-79ac-4855-93b9-9f3212740c4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CF2.Verify Fiction category contain a Fiction books",
              "fullTitle": "Categories page CF2.Verify Fiction category contain a Fiction books",
              "timedOut": null,
              "duration": 2455,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('app-book-card').then(book => {\n  let allBooks = book.length;\n  cy.get('mat-nav-list').contains(`${m.category}`).click();\n  cy.request({\n    method: 'GET',\n    url: '/api/Book'\n  }).then(res => {\n    let length = res.body.length;\n    let category = res.body.filter(x => x.category == `${m.category}`);\n    let bookTitle = category[0].title;\n    expect(allBooks).to.be.equal(length);\n    cy.get('app-book-card').then(book => {\n      expect(book[0]).to.contain(bookTitle);\n      expect(book.length).to.be.equal(category.length);\n    });\n  });\n});",
              "err": {},
              "uuid": "a73472e6-acd0-4cf4-bbe9-d7efeaa980df",
              "parentUUID": "8f188257-79ac-4855-93b9-9f3212740c4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CF3.Verify Mystery category contain a Mystery books",
              "fullTitle": "Categories page CF3.Verify Mystery category contain a Mystery books",
              "timedOut": null,
              "duration": 3581,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('app-book-card').then(book => {\n  let allBooks = book.length;\n  cy.get('mat-nav-list').contains(`${m.category}`).click();\n  cy.request({\n    method: 'GET',\n    url: '/api/Book'\n  }).then(res => {\n    let length = res.body.length;\n    let category = res.body.filter(x => x.category == `${m.category}`);\n    let bookTitle = category[0].title;\n    expect(allBooks).to.be.equal(length);\n    cy.get('app-book-card').then(book => {\n      expect(book[0]).to.contain(bookTitle);\n      expect(book.length).to.be.equal(category.length);\n    });\n  });\n});",
              "err": {},
              "uuid": "b9ab3050-cbb2-4531-89f8-d3644afda140",
              "parentUUID": "8f188257-79ac-4855-93b9-9f3212740c4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CF4.Verify Fantasy category contain a Fantasy books",
              "fullTitle": "Categories page CF4.Verify Fantasy category contain a Fantasy books",
              "timedOut": null,
              "duration": 1550,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('app-book-card').then(book => {\n  let allBooks = book.length;\n  cy.get('mat-nav-list').contains(`${m.category}`).click();\n  cy.request({\n    method: 'GET',\n    url: '/api/Book'\n  }).then(res => {\n    let length = res.body.length;\n    let category = res.body.filter(x => x.category == `${m.category}`);\n    let bookTitle = category[0].title;\n    expect(allBooks).to.be.equal(length);\n    cy.get('app-book-card').then(book => {\n      expect(book[0]).to.contain(bookTitle);\n      expect(book.length).to.be.equal(category.length);\n    });\n  });\n});",
              "err": {},
              "uuid": "aa5a9dc7-e816-4009-bb28-3897b6eea1d9",
              "parentUUID": "8f188257-79ac-4855-93b9-9f3212740c4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CF5.Verify Romance category contain a Romance books",
              "fullTitle": "Categories page CF5.Verify Romance category contain a Romance books",
              "timedOut": null,
              "duration": 2086,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('app-book-card').then(book => {\n  let allBooks = book.length;\n  cy.get('mat-nav-list').contains(`${m.category}`).click();\n  cy.request({\n    method: 'GET',\n    url: '/api/Book'\n  }).then(res => {\n    let length = res.body.length;\n    let category = res.body.filter(x => x.category == `${m.category}`);\n    let bookTitle = category[0].title;\n    expect(allBooks).to.be.equal(length);\n    cy.get('app-book-card').then(book => {\n      expect(book[0]).to.contain(bookTitle);\n      expect(book.length).to.be.equal(category.length);\n    });\n  });\n});",
              "err": {},
              "uuid": "7514a62d-b7df-43f4-8ad9-638e58a35621",
              "parentUUID": "8f188257-79ac-4855-93b9-9f3212740c4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ab70f25-35fe-437f-b048-0b4e78a1c550",
            "a73472e6-acd0-4cf4-bbe9-d7efeaa980df",
            "b9ab3050-cbb2-4531-89f8-d3644afda140",
            "aa5a9dc7-e816-4009-bb28-3897b6eea1d9",
            "7514a62d-b7df-43f4-8ad9-638e58a35621"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}